{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/data.js","../../src/Vivagraph.svelte","../../src/Cytoscape.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.44.1' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","export default function getGraphData(notes, retentions, settings, searchResults) {\r\n\r\n    console.log('getGraphData()');\r\n    console.assert(settings != null);\r\n    console.assert(notes != null && notes.length);\r\n    console.assert(retentions != null);\r\n\r\n    String.prototype.hashCode = function () {\r\n        var hash = 0, i, chr;\r\n        if (this.length === 0) return hash;\r\n        for (i = 0; i < this.length; i++) {\r\n            chr = this.charCodeAt(i);\r\n            hash = ((hash << 5) - hash) + chr;\r\n            hash |= 0;\r\n        }\r\n        return hash;\r\n    };\r\n\r\n    let byTag = {};\r\n    let tagCounts = {};\r\n    let edges = [];\r\n    let nodes = [];\r\n\r\n    let allNids = new Set();\r\n    let refs = {};\r\n\r\n    // regexp to look out for references to other nids\r\n    let nidReferenceRxp = new RegExp(\"(?:[^\\\\d]|^)(\\\\d{6,})(?:[^\\\\d]|$)\", 'g');\r\n\r\n    // count the occurences of each tag\r\n    for (var i = 0; i < notes.length; i++) {\r\n        let nid = notes[i][0];\r\n        allNids.add(nid);\r\n        let tags = notes[i][1];\r\n        let flds = notes[i][2];\r\n\r\n        // check fields for refs to other notes\r\n        for (let fld of flds) {\r\n            let match;\r\n            do {\r\n                match = nidReferenceRxp.exec(fld);\r\n                if (match && match.length) {\r\n                    if (!(nid in refs)) {\r\n                        refs[nid] = [];\r\n                    }\r\n                    let reffedNid = Number(match[1]);\r\n                    if (!refs[nid].includes(reffedNid)) {\r\n                        refs[nid].push(reffedNid);\r\n                    }\r\n                }\r\n            } while (match);\r\n        }\r\n        for (let t of tags) {\r\n            if (!(t in tagCounts)) {\r\n                tagCounts[t] = 1;\r\n            } else {\r\n                tagCounts[t]++;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    // group the notes by their tags\r\n    for (var i = 0; i < notes.length; i++) {\r\n        let [nid, tags, _, lbl] = notes[i];\r\n        if (tags.length) {\r\n            for (let t of tags) {\r\n                if (!(t in byTag)) {\r\n                    byTag[t] = [];\r\n                }\r\n                if (!searchResults.length || searchResults.includes(nid)) {\r\n                    byTag[t].push(nid);\r\n                }\r\n            }\r\n        }\r\n        if (settings.graphMode === 'default' || settings.graphMode === 'scoring') {\r\n            if (!searchResults.length || searchResults.includes(nid)) {\r\n                let ret = settings.showRetentions ? retentions[Number(nid)] || null : null;\r\n                nodes.push({\r\n                    data: { id: \"n_\" + nid, label: lbl, ret: ret },\r\n                    group: \"nodes\",\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    let idC = 0;\r\n    let nodesWithEdges = new Set();\r\n\r\n    if (settings.graphMode === 'default') {\r\n\r\n        for (let [tag, els] of Object.entries(byTag)) {\r\n            if (els.length === 0) {\r\n                continue;\r\n            }\r\n            if (els.length > settings.tagBoundary) {\r\n                console.log(\"[Graph] Skipping linking between nodes with tag \" + tag + \" because it has >\" + settings.tagBoundary + \" notes (\" + els.length + \")\");\r\n                continue;\r\n            } \r\n            if (settings.excludeTags && settings.excludeTags.includes(tag)) {\r\n                console.log(\"[Graph] Skipping linking between nodes with tag \" + tag + \" because it is excluded in the config.\");\r\n                continue;\r\n            }\r\n\r\n            let tid = ++idC;\r\n            let tnode = {\r\n                data: { id: \"t_\" + tid, label: tag, ret: null },\r\n                group: \"nodes\",\r\n            };\r\n            nodesWithEdges.add(tnode.data.id);\r\n            for (let n1 of els) {\r\n\r\n                idC++;\r\n\r\n                edges.push({\r\n                    group: \"edges\",\r\n                    data: {\r\n                        id: \"e_\" + idC,\r\n                        source: tnode.data.id,\r\n                        target: \"n_\" + n1,\r\n                    },\r\n                });\r\n                if (!nodesWithEdges.has('n_' + n1)) {\r\n                    nodesWithEdges.add('n_' + n1);\r\n                }\r\n            }\r\n            nodes.push(tnode);\r\n        }\r\n\r\n        // create edges between notes with explicit linkings\r\n        let explicitLinkingsCounter = 0;\r\n        for (let [nid, reffedNids] of Object.entries(refs)) {\r\n            for (let reffedNid of reffedNids) {\r\n                if (allNids.has(reffedNid) && nid !== reffedNid && (!searchResults.length || (searchResults.includes(nid) && searchResults.includes(reffedNid)))) {\r\n                    explicitLinkingsCounter++;\r\n                    idC++;\r\n                    edges.push({\r\n                        group: \"edges\",\r\n                        data: {\r\n                            id: \"e_\" + idC,\r\n                            source: 'n_' + nid,\r\n                            target: \"n_\" + reffedNid,\r\n                        },\r\n                    });\r\n                    if (!nodesWithEdges.has('n_' + nid)) {\r\n                        nodesWithEdges.add('n_' + nid);\r\n                    }\r\n                    if (!nodesWithEdges.has('n_' + reffedNid)) {\r\n                        nodesWithEdges.add('n_' + reffedNid);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        console.log(`[graph] Created ${explicitLinkingsCounter} explicit linking(s).`);\r\n\r\n    } else if (settings.graphMode === 'tags') {\r\n        let edgesCreated = new Set();\r\n        for (let [tag, els] of Object.entries(byTag)) {\r\n            if (settings.excludeTags && settings.excludeTags.includes(tag)) {\r\n                continue;\r\n            }\r\n            let tnode = {\r\n                data: { id: \"t_\" + tag.hashCode(), label: tag, ret: null },\r\n                group: \"nodes\",\r\n            };\r\n            nodes.push(tnode);\r\n            let c = 0;\r\n            let sum = 0.0;\r\n            for (let nid of els) {\r\n                if (nid in retentions) {\r\n                    c++;\r\n                    sum += retentions[nid];\r\n                }\r\n            }\r\n            tnode.data['ret'] = c > 0 ? (sum / c) : null;\r\n\r\n            for (let [tag1, els1] of Object.entries(byTag)) {\r\n                if (tag1 === tag) {\r\n                    continue;\r\n                }\r\n                if (settings.excludeTags && settings.excludeTags.includes(tag1)) {\r\n                    continue;\r\n                }\r\n\r\n                if (edgesCreated.has(tag + ' ' + tag1) || edgesCreated.has(tag1 + ' ' + tag)) {\r\n                    continue;\r\n                }\r\n                for (let nid1 of els1) {\r\n                    if (els.find(nid => nid === nid1)) {\r\n                        idC++;\r\n                        edges.push({\r\n                            group: \"edges\",\r\n                            data: {\r\n                                id: \"e_\" + idC,\r\n                                source: tnode.data.id,\r\n                                target: \"t_\" + tag1.hashCode(),\r\n                            },\r\n                        });\r\n                        edgesCreated.add(tag + ' ' + tag1);\r\n                        if (!nodesWithEdges.has(tnode.data.id)) {\r\n                            nodesWithEdges.add(tnode.data.id);\r\n                        }\r\n                        if (!nodesWithEdges.has('t_' + tag1.hashCode())) {\r\n                            nodesWithEdges.add('t_' + tag1.hashCode());\r\n                        }\r\n\r\n                        break;\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n        }\r\n    } else if (settings.graphMode === 'scoring') {\r\n\r\n        let scores = [];\r\n\r\n        let start = performance.now();\r\n\r\n\r\n        let c = 0;\r\n        let tcl = 0; \r\n        let dcl = 0;\r\n        \r\n        for (let i0 = 0; i0 < notes.length; i0++) {\r\n            let [nid0, tags0, flds0, _, dids0] = notes[i0];\r\n            for (let i1 = 0; i1 < notes.length; i1++) {\r\n                if (notes[i1][0] === notes[i0][0] || i1 <= i0) {\r\n                    continue;\r\n                }\r\n                if (searchResults.length && (!searchResults.includes(notes[i1][0]) || !searchResults.includes(notes[i0][0]))) {\r\n                    continue;\r\n                }\r\n                let [nid1, tags1, flds1, _, dids1] = notes[i1];\r\n                let score = 0;\r\n                c++;\r\n\r\n                //\r\n                // collect points\r\n                //\r\n\r\n                // +5 points if creation date within 30 seconds \r\n                if (Math.abs(nid0 - nid1) / 1000 <= 30) {\r\n                    score += 5;\r\n                    tcl++;\r\n                }  \r\n\r\n                // +4 points if creation date within 1 minute \r\n                else if (Math.abs(nid0 - nid1) / 1000 <= 60) {\r\n                    score += 4;\r\n                    tcl++;\r\n                }  \r\n\r\n                // +3 points if creation date within 10 minutes\r\n                else if (Math.abs(nid0 - nid1) / 1000 <= 600) {\r\n                    score += 3;\r\n                    tcl++;\r\n                }\r\n\r\n                // +1 point if creation date within 1 hour\r\n                else if (Math.abs(nid0 - nid1) / 1000 <= 3600) {\r\n                    score += 1;\r\n                    tcl++;\r\n                } \r\n\r\n                // +1 point if same deck\r\n                if (dids0.length && dids1.length && dids0.find(did0 => dids1.find(did1 => did1 === did0) != null)) {\r\n                    score += 1;\r\n                    dcl++;\r\n                }\r\n\r\n                for (let t0 of tags0 || []) {\r\n                    if (settings.excludeTags && settings.excludeTags.includes(t0)) {\r\n                        continue;\r\n                    }\r\n                    if (tags1.length && tags1.includes(t0) && t0 in tagCounts && tagCounts[t0] <= settings.tagBoundary) {\r\n\r\n                        if (tagCounts[t0] >= 100) {\r\n                            // +1 point for each tag in common that has 100-999 notes\r\n                            score += 1;\r\n                        } else if (tagCounts[t0] >= 50){\r\n                            // +2 points for each tag in common that has less than 100 notes\r\n                            score += 2;\r\n                        } else {\r\n                            // +3 points for each tag in common that has less than 50 notes\r\n                            score += 3;\r\n                        }\r\n                        // +1 points for each nested tag level\r\n                        score += 1 * (t0.split('::').length - 1);\r\n                    }\r\n                }\r\n\r\n                // // +0.5 points for each equal field\r\n                // for (let f0 of flds0 || []) {\r\n                //     for (let f1 of flds1 || []) {\r\n                //         if (f0.length && f1.length && f0 === f1) {\r\n                //             if (flds0.length < 5 && flds1.length < 5) {\r\n                //                 score += 0.5;\r\n                //             } else {\r\n                //                 score += 0.3;\r\n                //             }\r\n                //         } \r\n                //     }\r\n                // }\r\n\r\n                if (score > 0) {\r\n                    scores.push([nid0, nid1, score]);\r\n                }\r\n\r\n            }\r\n        }\r\n    \r\n        console.log(`[Graph] Finished collecting scores, took ${Math.trunc(performance.now() - start)}ms`);\r\n        console.log(`[Graph] Creation Date proximity found for ${Math.trunc(tcl * 100.0 / c)}% of pairs`);\r\n        console.log(`[Graph] Same Deck found for ${Math.trunc(dcl * 100.0 / c)}% of pairs`);\r\n        console.log(`[Graph] ${scores.length} note pairs have a score > 0`);\r\n        let boundary = settings.scoringIncludeTopXPercent;\r\n        if (boundary < 1 || boundary > 100) {\r\n            alert(\"Invalid boundary for scoring: \" + boundary);\r\n        }\r\n\r\n        if (scores.length) {\r\n            scores.sort(function (s1, s2) {\r\n                return s2[2] - s1[2];\r\n            });\r\n            console.log(`[Graph] Highest score is ${scores[0][2]}`);\r\n            console.log(`[Graph] Lowest score > 0 is ${scores[scores.length-1][2]}`);\r\n            \r\n            let topX = scores.slice(0, Math.trunc(scores.length * boundary / 100));\r\n            let minScore = topX[topX.length-1][2];\r\n            let res = [];\r\n            let c = 0;\r\n            let maxEdgeCount = 5000;\r\n            for (let s of scores) {\r\n                c++;\r\n                if (c > maxEdgeCount) {\r\n                    break;\r\n                }\r\n                if (s[2] >= minScore) {\r\n                    res.push(s);\r\n                }\r\n            }\r\n            console.log(`[Graph] Scoring, boundary is ${boundary}, took first ${res.length} edges out of ${scores.length}`);\r\n\r\n            for (let [nid0, nid1, _] of res) {\r\n\r\n                idC++;\r\n\r\n                edges.push({\r\n                    group: \"edges\",\r\n                    data: {\r\n                        id: \"e_\" + idC,\r\n                        source: \"n_\"+ nid0,\r\n                        target: \"n_\" + nid1,\r\n                    },\r\n                });\r\n                if (!nodesWithEdges.has('n_' + nid0)) {\r\n                    nodesWithEdges.add('n_' + nid0);\r\n                }\r\n                if (!nodesWithEdges.has('n_' + nid1)) {\r\n                    nodesWithEdges.add('n_' + nid1);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    } else {\r\n        console.warn(\"[Graph] invalid graph mode: \" + settings.graphMode);\r\n    }\r\n\r\n\r\n    if (!settings.showUnlinkedNodes) {\r\n        nodes = nodes.filter(n => nodesWithEdges.has(n.data.id));\r\n    }\r\n    return { edges: edges, nodes: nodes };\r\n\r\n}","<script>\r\nimport { onMount } from \"svelte\";\r\n\r\n\r\nimport getGraphData from './data.js';\r\n\r\n    export let notes;\r\n    export let retentions;\r\n    export let settings;\r\n    export let searchResults;\r\n\r\n    export let infoNid;\r\n\r\n    $: defNodeColor = settings.defaultNodeColor.replace('#', '0x');\r\n    $: edgeColor = settings.edgeColor;\r\n\r\n    let rendering = false;\r\n    let loader = {\r\n        show: false,\r\n        text: \"Building graph layout...\",\r\n    };\r\n\r\n    onMount (function() {\r\n        document.onmousemove = function(e){\r\n            window.lastMouseMove = [e.pageX, e.pageY];\r\n        };\r\n    });\r\n\r\n    function renderWebglTooltip(x, y, nid, text) {\r\n        hideWebglTooltip();\r\n        infoNid = Number(nid);\r\n        // window.tooltipId = nid;\r\n        if (!window.tooltip) {\r\n            window.tooltip = document.createElement(\"div\");\r\n            window.tooltip.classList.add(\"tooltip\");\r\n            window.tooltip.style.position = \"absolute\";\r\n            document.body.appendChild(window.tooltip);\r\n        }\r\n        window.tooltip.style.left = x + \"px\";\r\n        window.tooltip.style.top = y + \"px\";\r\n        window.tooltip.style.display = 'block';\r\n        // window.tooltip.setAttribute(\"onmouseover\", \"hideWebglTooltip()\");\r\n        window.tooltip.innerHTML = text || '?';\r\n    }\r\n    function hideWebglTooltip() {\r\n        if (window.tooltip) {\r\n            window.tooltip.style.display = 'none';\r\n        }\r\n    }\r\n    function retColorHex(ret) {\r\n        if (ret === null || typeof ret === \"undefined\") {\r\n            return defNodeColor;\r\n        }\r\n        if (ret > 0.8) {\r\n            return \"0x479810\";\r\n        }\r\n        if (ret > 0.7) {\r\n            return \"0x9EDE73\";\r\n        }\r\n        if (ret > 0.6) {\r\n            return \"0xF7EA00\";\r\n        }\r\n        if (ret > 0.5) {\r\n            return \"0xE48900\";\r\n        }\r\n\r\n        return \"0xBE0000\";\r\n    }\r\n\r\n    export function renderGraph() {\r\n        if (typeof window.Viva === \"undefined\") {\r\n            console.warn(\"Graph lib not loaded, aborting...\");\r\n            return;\r\n        }\r\n        console.log(\"renderGraph()\");\r\n        if (rendering) {\r\n            console.log(\"renderGraph(): Already rendering, aborting.\");\r\n            return;\r\n        }\r\n        loader.show = true;\r\n        rendering = true;\r\n\r\n        setTimeout(function () {\r\n\r\n            let pBuildNodes = performance.now();\r\n            let { nodes, edges } = getGraphData(notes, retentions, settings, searchResults);\r\n           \r\n            console.log('Built ' + nodes.length + ' nodes, ' + edges.length + ' edges.');\r\n            console.log('Build nodes: ' + (performance.now() - pBuildNodes) + ' ms');\r\n            // setStatus('Running tests...');\r\n            // setStatus('Starting graphing...');\r\n            let pGraphStart = performance.now();\r\n\r\n            /**\r\n             * Vivagraph.js\r\n             */\r\n            if (typeof graph !== \"undefined\") {\r\n                graph.clear();\r\n                if (document.getElementById('cytoscape-container').children.length)  {\r\n                    document\r\n                        .getElementById(\"cytoscape-container\")\r\n                        .children[0].remove();\r\n\r\n                }\r\n            }\r\n\r\n            //  var graphics = Viva.Graph.View.svgGraphics();\r\n            var graphics = Viva.Graph.View.webglGraphics();\r\n            var circleNode = buildCircleNodeShader();\r\n            graphics.setNodeProgram(circleNode);\r\n            graphics\r\n                .node(function (node) {\r\n                    // The function is called every time renderer needs a ui to display node\r\n                    return {\r\n                        size: 11,\r\n                        color: node.data.ret\r\n                            ? retColorHex(Number(node.data.ret))\r\n                            : defNodeColor,\r\n                    };\r\n                    // return Viva.Graph.View.webglSquare(10, retColor(Number(node.data.retention)));\r\n                })\r\n                .link(function (link) {\r\n                    return Viva.Graph.View.webglLine(edgeColor);\r\n                });\r\n            window.graph = Viva.Graph.graph();\r\n            for (let n of nodes) {\r\n                graph.addNode(n.data.id, n.data);\r\n            }\r\n            for (let e of edges) {\r\n                graph.addLink(e.data.source, e.data.target);\r\n            }\r\n            var layout = Viva.Graph.Layout.forceDirected(graph, {\r\n                springLength: 3,\r\n                springCoeff: 0.0009,\r\n                dragCoeff: 0.02,\r\n                gravity: -1.2,\r\n            });\r\n\r\n            window.hideWebglTooltip = hideWebglTooltip;\r\n            var events = Viva.Graph.webglInputEvents(graphics, graph);\r\n            events\r\n                .mouseEnter(function (node) {\r\n                    // window.hoveredNodeId = node.id;\r\n                    // graphics.getNodeUI(window.hoveredNodeId).color = 4286513407;\r\n                    // graph.forEachLinkedNode(node.id, function(node, link){\r\n                    //     var linkUI = graphics.getLinkUI(link.id);\r\n                    //     linkUI.color = 4286513407;\r\n                    // });\r\n                    // renderer.rerender();\r\n                    // let pos = layout.getNodePosition(node.id);\r\n                    // let domPos = graphics.transformGraphToClientCoordinates({\r\n                    //     x: pos.x,\r\n                    //     y: pos.y,\r\n                    // });\r\n                    renderWebglTooltip(\r\n                        window.lastMouseMove[0],\r\n                        window.lastMouseMove[1] + 10,\r\n                        node.id.substring(2),\r\n                        node.data.label\r\n                    );\r\n                })\r\n                .mouseLeave(function (node) {\r\n                    // if (window.hoveredNodeId) {\r\n                        // graphics.getNodeUI(window.hoveredNodeId).color = defNodeColor;\r\n                    //     graph.forEachLinkedNode(window.hoveredNodeId, function(node, link){\r\n                    //         var linkUI = graphics.getLinkUI(link.id);\r\n                    //         linkUI.color = 3014898687;\r\n                        // });\r\n                        // renderer.rerender();\r\n\r\n                    // }\r\n                    hideWebglTooltip();\r\n                });\r\n\r\n            // specify where it should be rendered:\r\n            var renderer = Viva.Graph.View.renderer(graph, {\r\n                layout: layout,\r\n                graphics: graphics,\r\n                container: document.getElementById(\"cytoscape-container\"),\r\n            });\r\n            renderer.run(settings.iterations);\r\n\r\n            function checkMovement() {\r\n                if (window._lastMove && window._lastMove == layout.lastMove) {\r\n                    var graphRect = layout.getGraphRect();\r\n                    var graphSize = Math.min(\r\n                        graphRect.x2 - graphRect.x1,\r\n                        graphRect.y2 - graphRect.y1\r\n                    );\r\n                    var screenSize = Math.min(\r\n                        document.body.clientWidth,\r\n                        document.body.clientHeight\r\n                    );\r\n\r\n                    // setStatus(\r\n                    //     \"Graph render: \" +\r\n                    //         Math.trunc(performance.now() - pGraphStart) +\r\n                    //         \" ms\"\r\n                    // );\r\n                    rendering = false;\r\n\r\n                    var desiredScale = screenSize / graphSize;\r\n                    zoomOut(desiredScale, 1);\r\n\r\n                    function zoomOut(desiredScale, currentScale) {\r\n                        // zoom API in vivagraph 0.5.x is silly. There is no way to pass transform\r\n                        // directly. Maybe it will be fixed in future, for now this is the best I could do:\r\n                        if (desiredScale < currentScale) {\r\n                            currentScale = renderer.zoomOut();\r\n                            setTimeout(function () {\r\n                                zoomOut(desiredScale, currentScale);\r\n                            }, 16);\r\n                        }\r\n                    }\r\n                } else {\r\n                    window._lastMove = layout.lastMove;\r\n                    setTimeout(checkMovement, 200);\r\n                }\r\n            }\r\n            checkMovement();\r\n            loader.show = false;\r\n\r\n            // Next comes the hard part - implementation of API for custom shader\r\n            // program, used by webgl renderer:\r\n            function buildCircleNodeShader() {\r\n                // For each primitive we need 4 attributes: x, y, color and size.\r\n\r\n                var ATTRIBUTES_PER_PRIMITIVE = 4,\r\n                    nodesFS = [\r\n                        \"precision mediump float;\",\r\n                        \"varying vec4 color;\",\r\n\r\n                        \"void main(void) {\",\r\n                        \"   if ((gl_PointCoord.x - 0.5) * (gl_PointCoord.x - 0.5) + (gl_PointCoord.y - 0.5) * (gl_PointCoord.y - 0.5) < 0.25) {\",\r\n                        \"     gl_FragColor = color;\",\r\n                        \"   } else {\",\r\n                        \"     gl_FragColor = vec4(0);\",\r\n                        \"   }\",\r\n                        \"}\",\r\n                    ].join(\"\\n\"),\r\n                    nodesVS = [\r\n                        \"attribute vec2 a_vertexPos;\",\r\n                        // Pack color and size into vector. First elemnt is color, second - size.\r\n                        // Since it's floating point we can only use 24 bit to pack colors...\r\n                        // thus alpha channel is dropped, and is always assumed to be 1.\r\n                        \"attribute vec2 a_customAttributes;\",\r\n                        \"uniform vec2 u_screenSize;\",\r\n                        \"uniform mat4 u_transform;\",\r\n                        \"varying vec4 color;\",\r\n\r\n                        \"void main(void) {\",\r\n                        \"   gl_Position = u_transform * vec4(a_vertexPos/u_screenSize, 0, 1);\",\r\n                        \"   gl_PointSize = a_customAttributes[1] * u_transform[0][0];\",\r\n                        \"   float c = a_customAttributes[0];\",\r\n                        \"   color.b = mod(c, 256.0); c = floor(c/256.0);\",\r\n                        \"   color.g = mod(c, 256.0); c = floor(c/256.0);\",\r\n                        \"   color.r = mod(c, 256.0); c = floor(c/256.0); color /= 255.0;\",\r\n                        \"   color.a = 1.0;\",\r\n                        \"}\",\r\n                    ].join(\"\\n\");\r\n\r\n                var program,\r\n                    gl,\r\n                    buffer,\r\n                    locations,\r\n                    nodes = new Float32Array(64),\r\n                    nodesCount = 0,\r\n                    webglUtils,\r\n                    canvasWidth,\r\n                    canvasHeight,\r\n                    transform,\r\n                    isCanvasDirty;\r\n\r\n                return {\r\n                    /**\r\n                     * Called by webgl renderer to load the shader into gl context.\r\n                     */\r\n                    load: function (glContext) {\r\n                        gl = glContext;\r\n                        webglUtils = Viva.Graph.webgl(glContext);\r\n                        program = webglUtils.createProgram(nodesVS, nodesFS);\r\n                        gl.useProgram(program);\r\n                        locations = webglUtils.getLocations(program, [\r\n                            \"a_vertexPos\",\r\n                            \"a_customAttributes\",\r\n                            \"u_screenSize\",\r\n                            \"u_transform\",\r\n                        ]);\r\n\r\n                        gl.enableVertexAttribArray(locations.vertexPos);\r\n                        gl.enableVertexAttribArray(locations.customAttributes);\r\n\r\n                        buffer = gl.createBuffer();\r\n                    },\r\n\r\n                    /**\r\n                     * Called by webgl renderer to update node position in the buffer array\r\n                     *\r\n                     * @param nodeUI - data model for the rendered node (WebGLCircle in this case)\r\n                     * @param pos - {x, y} coordinates of the node.\r\n                     */\r\n                    position: function (nodeUI, pos) {\r\n                        var idx = nodeUI.id;\r\n                        nodes[idx * ATTRIBUTES_PER_PRIMITIVE] = pos.x;\r\n                        nodes[idx * ATTRIBUTES_PER_PRIMITIVE + 1] = -pos.y;\r\n                        nodes[idx * ATTRIBUTES_PER_PRIMITIVE + 2] =\r\n                            nodeUI.color;\r\n                        nodes[idx * ATTRIBUTES_PER_PRIMITIVE + 3] = nodeUI.size;\r\n                    },\r\n\r\n                    /**\r\n                     * Request from webgl renderer to actually draw our stuff into the\r\n                     * gl context. This is the core of our shader.\r\n                     */\r\n                    render: function () {\r\n                        gl.useProgram(program);\r\n                        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n                        gl.bufferData(gl.ARRAY_BUFFER, nodes, gl.DYNAMIC_DRAW);\r\n\r\n                        if (isCanvasDirty) {\r\n                            isCanvasDirty = false;\r\n                            gl.uniformMatrix4fv(\r\n                                locations.transform,\r\n                                false,\r\n                                transform\r\n                            );\r\n                            gl.uniform2f(\r\n                                locations.screenSize,\r\n                                canvasWidth,\r\n                                canvasHeight\r\n                            );\r\n                        }\r\n\r\n                        gl.vertexAttribPointer(\r\n                            locations.vertexPos,\r\n                            2,\r\n                            gl.FLOAT,\r\n                            false,\r\n                            ATTRIBUTES_PER_PRIMITIVE *\r\n                                Float32Array.BYTES_PER_ELEMENT,\r\n                            0\r\n                        );\r\n                        gl.vertexAttribPointer(\r\n                            locations.customAttributes,\r\n                            2,\r\n                            gl.FLOAT,\r\n                            false,\r\n                            ATTRIBUTES_PER_PRIMITIVE *\r\n                                Float32Array.BYTES_PER_ELEMENT,\r\n                            2 * 4\r\n                        );\r\n\r\n                        gl.drawArrays(gl.POINTS, 0, nodesCount);\r\n                    },\r\n\r\n                    /**\r\n                     * Called by webgl renderer when user scales/pans the canvas with nodes.\r\n                     */\r\n                    updateTransform: function (newTransform) {\r\n                        transform = newTransform;\r\n                        isCanvasDirty = true;\r\n                    },\r\n\r\n                    /**\r\n                     * Called by webgl renderer when user resizes the canvas with nodes.\r\n                     */\r\n                    updateSize: function (newCanvasWidth, newCanvasHeight) {\r\n                        canvasWidth = newCanvasWidth;\r\n                        canvasHeight = newCanvasHeight;\r\n                        isCanvasDirty = true;\r\n                    },\r\n\r\n                    /**\r\n                     * Called by webgl renderer to notify us that the new node was created in the graph\r\n                     */\r\n                    createNode: function (node) {\r\n                        nodes = webglUtils.extendArray(\r\n                            nodes,\r\n                            nodesCount,\r\n                            ATTRIBUTES_PER_PRIMITIVE\r\n                        );\r\n                        nodesCount += 1;\r\n                    },\r\n\r\n                    /**\r\n                     * Called by webgl renderer to notify us that the node was removed from the graph\r\n                     */\r\n                    removeNode: function (node) {\r\n                        if (nodesCount > 0) {\r\n                            nodesCount -= 1;\r\n                        }\r\n\r\n                        if (node.id < nodesCount && nodesCount > 0) {\r\n                            // we do not really delete anything from the buffer.\r\n                            // Instead we swap deleted node with the \"last\" node in the\r\n                            // buffer and decrease marker of the \"last\" node. Gives nice O(1)\r\n                            // performance, but make code slightly harder than it could be:\r\n                            webglUtils.copyArrayPart(\r\n                                nodes,\r\n                                node.id * ATTRIBUTES_PER_PRIMITIVE,\r\n                                nodesCount * ATTRIBUTES_PER_PRIMITIVE,\r\n                                ATTRIBUTES_PER_PRIMITIVE\r\n                            );\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * This method is called by webgl renderer when it changes parts of its\r\n                     * buffers. We don't use it here, but it's needed by API (see the comment\r\n                     * in the removeNode() method)\r\n                     */\r\n                    replaceProperties: function (replacedNode, newNode) {},\r\n                };\r\n            }\r\n        }, 10);\r\n    }\r\n</script>\r\n\r\n<div style=\"height: 100%; flex: 1 1 auto; display: flex;\">\r\n    {#if loader.show}\r\n        <div class=\"overlay\">\r\n            <div class='loader' style='margin-left: auto; margin-right: auto;'></div><br/>\r\n            <div style=\"margin-bottom: 5px\">Building Graph ...</div>\r\n            <div style='font-size: 18px; opacity: 0.7'>[Lib: {settings.mode}, Mode: {settings.graphMode}]</div>\r\n        </div>\r\n    {/if}\r\n    <div id=\"cytoscape-container\" />\r\n</div>\r\n\r\n<style>\r\n    #cytoscape-container {\r\n        flex: 1 1 auto;\r\n        height: 100%;\r\n    }\r\n    :global(#cytoscape-container > div) {\r\n        width: 100% !important;\r\n    }\r\n    :global(#cytoscape-container canvas) {\r\n        width: 100% !important;\r\n    }\r\n    .overlay {\r\n        background: rgba(0, 0, 0, 0.5);\r\n        color: white;\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: center;\r\n        font-size: 30px;\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        z-index: 100;\r\n    }\r\n    :global(.tooltip) {\r\n\t\tbackground: #444;\r\n\t\tcolor: white;\r\n\t\tpadding: 5px;\r\n\t\tfont-size: 11px;\r\n\t\ttext-overflow: ellipsis;\r\n\t\tmax-width: 200px;\r\n\t\toverflow: hidden;\r\n        font-family: \"Open Sans\";\r\n\t}\r\n</style>\r\n","<script>\r\n    import { onMount, onDestroy, tick } from \"svelte\";\r\n\r\n    import getGraphData from \"./data.js\";\r\n\r\n    export let notes;\r\n    export let retentions;\r\n    export let settings;\r\n    export let searchResults;\r\n\r\n    export let infoNid;\r\n\r\n    $: defNodeColor = settings.defaultNodeColor;\r\n    $: edgeColor = settings.edgeColor;\r\n\r\n    let rendering = false;\r\n    let loader = {\r\n        show: false,\r\n        text: \"\",\r\n    };\r\n\r\n    onMount(function () {\r\n    });\r\n    onDestroy(function () {\r\n        window.removeEventListener(\"resize\", onResize);\r\n    });\r\n\r\n    function onResize() {\r\n        if (cy !== null) {\r\n            cy.center();\r\n        }\r\n    }\r\n\r\n    function renderTooltip(event) {\r\n        let node = event.target;\r\n        if (!node.isNode()) {\r\n            hideTooltip();\r\n            return;\r\n        }\r\n\r\n        let id = node.id();\r\n        if (window.tooltip && window.tooltipId === id) {\r\n            return;\r\n        }\r\n        hideTooltip(event);\r\n        // let neighbors = node.neighborhood();\r\n        // if (neighbors) {\r\n        //     neighbors.nodes().addClass(\"highlight\");\r\n        // }\r\n        infoNid = Number(id.substring(2));\r\n        window.tooltipId = id;\r\n        let e = event.originalEvent;\r\n        let x = e.pageX;\r\n        let y = e.pageY;\r\n        window.tooltip = document.createElement(\"div\");\r\n        window.tooltip.classList.add(\"tooltip\");\r\n        window.tooltip.style.position = \"absolute\";\r\n        window.tooltip.style.left = x + \"px\";\r\n        window.tooltip.style.top = y + \"px\";\r\n        window.tooltip.innerHTML = node.data(\"label\");\r\n        document.body.appendChild(window.tooltip);\r\n    }\r\n\r\n    function hideTooltip(event) {\r\n        if (window.tooltip) {\r\n            window.tooltip.remove();\r\n            window.tooltip = null;\r\n        }\r\n        // if (event) {\r\n        //     let node = event.target;\r\n        //     if (node && node.isNode()) {\r\n        //         let neighbors = node.neighborhood();\r\n        //         if (neighbors) {\r\n        //             neighbors.nodes().removeClass(\"highlight\");\r\n        //         }\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    function retColor(ret) {\r\n        if (ret === null) {\r\n            return \"#999\";\r\n        }\r\n        if (ret > 0.8) {\r\n            return \"hsl(96, 81%, 33%)\";\r\n        }\r\n        if (ret > 0.7) {\r\n            return \"#9EDE73\";\r\n        }\r\n        if (ret > 0.6) {\r\n            return \"#F7EA00\";\r\n        }\r\n        if (ret > 0.5) {\r\n            return \"#E48900\";\r\n        }\r\n        return \"#BE0000\";\r\n    }\r\n\r\n    export async function renderGraph() {\r\n        console.log(\"renderGraph()\");\r\n        if (rendering) {\r\n            console.log(\"already rendering, cannot rerender\");\r\n            return;\r\n        }\r\n        loader.show = true;\r\n        rendering = true;\r\n   \r\n        await tick();\r\n        setTimeout(function () {\r\n            console.log(\"renderGraph()\");\r\n            let container = document.getElementById(\"cytoscape-container\");\r\n            container.innerHTML = \"\";\r\n\r\n            let pBuildNodes = performance.now();\r\n            let settingsCopy = JSON.parse(JSON.stringify(settings));\r\n            settingsCopy.showUnlinkedNodes = false;\r\n            let { nodes, edges } = getGraphData(\r\n                notes,\r\n                retentions,\r\n                settingsCopy,\r\n                searchResults\r\n            );\r\n\r\n            console.log(\r\n                \"Built \" + nodes.length + \" nodes, \" + edges.length + \" edges.\"\r\n            );\r\n            console.log(\r\n                \"Build nodes: \" + (performance.now() - pBuildNodes) + \" ms\"\r\n            );\r\n            // setStatus('Running tests...');\r\n            // setStatus('Starting graphing...');\r\n            let pGraphStart = performance.now();\r\n\r\n            /**\r\n             * CytoScape.js\r\n             */\r\n\r\n            var cy = cytoscape({\r\n                container: container,\r\n                elements: {\r\n                    nodes: nodes,\r\n                    edges: edges,\r\n                },\r\n\r\n                style: [\r\n                    {\r\n                        selector: \"node\",\r\n                        style: {\r\n                            // 'background-color': '#666',\r\n                            height: (n) =>\r\n                                n.data(\"id\").startsWith(\"t_\") ? 12 : 7,\r\n                            width: (n) =>\r\n                                n.data(\"id\").startsWith(\"t_\") ? 12 : 7,\r\n                            \"background-color\": (n) => {\r\n                                return n.data(\"ret\")\r\n                                    ? retColor(Number(n.data(\"ret\")))\r\n                                    : defNodeColor;\r\n                            },\r\n                            // 'label': 'data(label)'\r\n                        },\r\n                    },\r\n\r\n                    {\r\n                        selector: \"edge\",\r\n                        style: {\r\n                            width: \"2px\",\r\n\r\n                            \"line-color\": settings.edgeColor,\r\n                        },\r\n                    },\r\n                ],\r\n\r\n                // layout: {\r\n                //   name: 'cose',\r\n                //   idealEdgeLength: 50,\r\n                //   nodeOverlap: 20,\r\n                //   refresh: 20,\r\n                //   animate: false,\r\n                //   fit: true,\r\n                //   padding: 130,\r\n                //   randomize: true,\r\n                //   componentSpacing: 100,\r\n                //   nodeRepulsion: 800000,\r\n                //   edgeElasticity: 100,\r\n                //   nestingFactor: 5,\r\n                //   gravity: 280,\r\n                //   numIter: 1000,\r\n                //   initialTemp: 200,\r\n                //   coolingFactor: 0.95,\r\n                //   minTemp: 1.0,\r\n                //   textureOnViewport: true,\r\n                // },\r\n                // layout: {\r\n                //   name: 'circle',\r\n                // }\r\n                // default layout options\r\n                layout: {\r\n                    name: \"fcose\",\r\n                    quality: \"default\",\r\n                    // Use random node positions at beginning of layout\r\n                    // if this is set to false, then quality option must be \"proof\"\r\n                    randomize: true,\r\n                    // Whether or not to animate the layout\r\n                    animate: false,\r\n                    // Duration of animation in ms, if enabled\r\n                    animationDuration: 1000,\r\n                    // Easing of animation, if enabled\r\n                    animationEasing: undefined,\r\n                    // Fit the viewport to the repositioned nodes\r\n                    fit: true,\r\n                    // Padding around layout\r\n                    padding: 30,\r\n                    // Whether to include labels in node dimensions. Valid in \"proof\" quality\r\n                    nodeDimensionsIncludeLabels: false,\r\n                    // Whether or not simple nodes (non-compound nodes) are of uniform dimensions\r\n                    uniformNodeDimensions: true,\r\n                    // Whether to pack disconnected components - cytoscape-layout-utilities extension should be registered and initialized\r\n                    packComponents: false,\r\n                    // Layout step - all, transformed, enforced, cose - for debug purpose only\r\n                    step: \"all\",\r\n\r\n                    /* spectral layout options */\r\n\r\n                    // False for random, true for greedy sampling\r\n                    samplingType: true,\r\n                    // Sample size to construct distance matrix\r\n                    sampleSize: 25,\r\n                    // Separation amount between nodes\r\n                    nodeSeparation: 175,\r\n                    // Power iteration tolerance\r\n                    piTol: 0.0000001,\r\n\r\n                    /* incremental layout options */\r\n\r\n                    // Node repulsion (non overlapping) multiplier\r\n                    nodeRepulsion: (node) => 8500,\r\n                    // Ideal edge (non nested) length\r\n                    idealEdgeLength: (edge) => 50,\r\n                    // Divisor to compute edge forces\r\n                    edgeElasticity: (edge) => 0.85,\r\n                    // Nesting factor (multiplier) to compute ideal edge length for nested edges\r\n                    nestingFactor: 0.1,\r\n                    // Maximum number of iterations to perform - this is a suggested value and might be adjusted by the algorithm as required\r\n                    numIter: 2500,\r\n                    // For enabling tiling\r\n                    tile: true,\r\n                    // Represents the amount of the vertical space to put between the zero degree members during the tiling operation(can also be a function)\r\n                    tilingPaddingVertical: 10,\r\n                    // Represents the amount of the horizontal space to put between the zero degree members during the tiling operation(can also be a function)\r\n                    tilingPaddingHorizontal: 10,\r\n                    // Gravity force (constant)\r\n                    gravity: 0.05,\r\n                    // Gravity range (constant) for compounds\r\n                    gravityRangeCompound: 10.5,\r\n                    // Gravity force (constant) for compounds\r\n                    gravityCompound: 15.0,\r\n                    // Gravity range (constant)\r\n                    gravityRange: 50.8,\r\n                    // Initial cooling factor for incremental layout\r\n                    initialEnergyOnIncremental: 0.3,\r\n\r\n                    /* constraint options */\r\n\r\n                    // Fix desired nodes to predefined positions\r\n                    // [{nodeId: 'n1', position: {x: 100, y: 200}}, {...}]\r\n                    fixedNodeConstraint: undefined,\r\n                    // Align desired nodes in vertical/horizontal direction\r\n                    // {vertical: [['n1', 'n2'], [...]], horizontal: [['n2', 'n4'], [...]]}\r\n                    alignmentConstraint: undefined,\r\n                    // Place two nodes relatively in vertical/horizontal direction\r\n                    // [{top: 'n1', bottom: 'n2', gap: 100}, {left: 'n3', right: 'n4', gap: 75}, {...}]\r\n                    relativePlacementConstraint: undefined,\r\n                    textureOnViewport: true,\r\n\r\n                    /* layout event callbacks */\r\n                    ready: () => {}, // on layoutready\r\n                    stop: () => {}, // on layoutstop\r\n                },\r\n            });\r\n\r\n            cy.elements().unbind(\"mouseover\");\r\n            cy.elements().bind(\"mouseover\", (event) => renderTooltip(event));\r\n\r\n            cy.elements().unbind(\"mouseout\");\r\n            cy.elements().bind(\"mouseout\", (event) => hideTooltip(event));\r\n            window.addEventListener(\"resize\", onResize);\r\n            loader.show = false;\r\n            rendering = false;\r\n            window.cy = cy;\r\n        }, 30);\r\n    }\r\n</script>\r\n\r\n<div style=\"height: 100%; flex: 1 1 auto; display: flex;\">\r\n    {#if loader.show}\r\n        <div class=\"overlay\">\r\n                <div class='loader' style='margin-left: auto; margin-right: auto;'></div><br/>\r\n                <div style=\"margin-bottom: 5px\">Building Graph ...</div>\r\n                <div style='font-size: 18px; opacity: 0.7'>[Lib: {settings.mode}, Mode: {settings.graphMode}]</div>\r\n        </div>\r\n    {/if}\r\n    <div id=\"cytoscape-container\" />\r\n</div>\r\n\r\n<style>\r\n    #cytoscape-container {\r\n        flex: 1 1 auto;\r\n        height: 100%;\r\n    }\r\n    :global(#cytoscape-container > div) {\r\n        width: 100% !important;\r\n    }\r\n    :global(#cytoscape-container canvas) {\r\n        width: 100% !important;\r\n    }\r\n    .overlay {\r\n        background: rgba(0, 0, 0, 0.5);\r\n        color: white;\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: center;\r\n        font-size: 30px;\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        z-index: 100;\r\n    }\r\n    :global(.tooltip) {\r\n        background: #444;\r\n        color: white;\r\n        padding: 5px;\r\n        font-size: 11px;\r\n        text-overflow: ellipsis;\r\n        max-width: 200px;\r\n        overflow: hidden;\r\n        font-family: \"Open Sans\";\r\n    }\r\n</style>\r\n","<script>\n\timport { onMount, tick } from \"svelte\";\n\n\timport Vivagraph from \"./Vivagraph.svelte\";\n\timport Cytoscape from \"./Cytoscape.svelte\";\n\n\t\n\tlet settings = window.settings;\n\tlet notes = window.notes;\n\tlet retentions = window.retentions;\n\n\tlet search = '';\n\tlet searchResults = [];\n\n\tlet graph;\n\tlet infoNid;\n\tlet tagBoundaryInp = settings.tagBoundary;\n\tlet iterInp = settings.iterations;\n\n\tlet webGLAvailable = webglSupport();\n\n\n\t$: note = infoNid ? notes.find((n) => n[0] === infoNid) : null;\n\t$: noteTags = note ? note[1] : [];\n\t$: noteFields = note ? note[2].filter((f) => f && f.trim().length) : [];\n\n\tlet prevMode = settings.mode;\n\tlet prevGraphMode = settings.graphMode;\n\n\t$: tagBoundaryInp && tagBoundaryChange();\n\t$: iterInp && iterationChange();\n\t$: settings.defaultNodeColor &&\n\t\t(() => {\n\t\t\tif (typeof pycmd !== \"undefined\")\n\t\t\t\tpycmd(\"config-default-node-color \" + settings.defaultNodeColor);\n\t\t})();\n\t$: settings.edgeColor &&\n\t\t(() => {\n\t\t\tif (typeof pycmd !== \"undefined\")\n\t\t\t\tpycmd(\"config-edge-color \" + settings.edgeColor);\n\t\t})();\n\t$: settings.backgroundColor &&\n\t\t(() => {\n\t\t\tif (typeof pycmd !== \"undefined\")\n\t\t\t\tpycmd(\"config-background-color \" + settings.backgroundColor);\n\t\t})();\n\t$: settings.mode &&\n\t\t(() => {\n\t\t\tif (prevMode === settings.mode) return;\n\t\t\tprevMode = settings.mode;\n\t\t\tif (typeof pycmd !== \"undefined\")\n\t\t\t\tpycmd(\"config-mode \" + settings.mode);\n\t\t\trenderGraph();\n\t\t})();\n\t$: settings.graphMode &&\n\t\t(() => {\n\t\t\tif (prevGraphMode === settings.graphMode) return;\n\t\t\tprevGraphMode = settings.graphMode;\n\t\t\tif (typeof pycmd !== \"undefined\")\n\t\t\t\tpycmd(\"config-graph-mode \" + settings.graphMode);\n\t\t\trenderGraph();\n\t\t})();\n\n\n\tonMount(renderWhenReady);\n\n\tfunction renderWhenReady() {\n\t\tif (!window.notes || window.notes.length === 0) {\n\t\t\tsetTimeout(() => {\n\t\t\t\trenderWhenReady();\n\t\t\t}, 50);\n\t\t\treturn;\n\t\t}\n\t\tnotes = window.notes;\n\t\trenderGraph();\n\t}\n\n\tfunction triggerSearch() {\n\t\tif (search && search.trim().length) {\n\t\t\t\tfetch('search '  + search).then(function(nids) {\n\t\t\t\t\tsearchResults = nids || [];\n\t\t\t\t\tif (!searchResults.length) {\n\t\t\t\t\t\tshowNotification('Search found no results.');\n\t\t\t\t\t}\n\t\t\t\t\trenderGraph();\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\tif (searchResults.length) {\n\t\t\t\t\tsearchResults = [];\n\t\t\t\t\trenderGraph();\n\t\t\t\t} else {\n\t\t\t\t\tsearchResults = [];\n\t\t\t\t}\n\t\t\t}\n\t}\n\n\tfunction onSearchKeypress(e) {\n\t\tif (e && e.keyCode === 13) {\n\t\t\ttriggerSearch();\n\t\t} \n\t}\n\n\tfunction tagBoundaryChange() {\n\t\tif (tagBoundaryInp < 50 || tagBoundaryInp > 1000) {\n\t\t\treturn;\n\t\t}\n\t\tif (typeof window.pycmd === \"undefined\") {\n\t\t\treturn;\n\t\t}\n\t\twindow.pycmd(\"config-tag-boundary \" + tagBoundaryInp);\n\t\tsettings.tagBoundary = tagBoundaryInp;\n\t}\n\tfunction iterationChange() {\n\t\tif (iterInp < 50 || iterInp > 1000) {\n\t\t\treturn;\n\t\t}\n\t\tif (typeof window.pycmd === \"undefined\") {\n\t\t\treturn;\n\t\t}\n\t\twindow.pycmd(\"config-iterations \" + iterInp);\n\t\tsettings.iterations = iterInp;\n\t}\n\tfunction webglSupport() {\n\t\ttry {\n\t\t\tvar canvas = document.createElement(\"canvas\");\n\t\t\treturn Boolean(\n\t\t\t\t!!window.WebGLRenderingContext &&\n\t\t\t\t(canvas.getContext(\"webgl\") || canvas.getContext(\"experimental-webgl\"))\n\t\t\t);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tfunction toggleShowRetentions() {\n\t\tsettings.showRetentions = !settings.showRetentions;\n\t\twindow.pycmd(\n\t\t\tsettings.showRetentions\n\t\t\t\t? \"config-show-retentions\"\n\t\t\t\t: \"config-hide-retentions\"\n\t\t);\n\t}\n\tfunction toggleShowUnlinkedNodes() {\n\t\tsettings.showUnlinkedNodes = !settings.showUnlinkedNodes;\n\t\twindow.pycmd(\n\t\t\t\"config-show-unlinked \" +\n\t\t\t\tsettings.showUnlinkedNodes.toString().toLowerCase()\n\t\t);\n\t}\n\n\tfunction fetch(resource) {\n\t\tlet key  = Date.now()+ '-' + resource.split(\"\").reduce(function(a,b){a=((a<<5)-a)+b.charCodeAt(0);return a&a},0);\n\n\t\tif (typeof(window._fetchWaiting) === 'undefined') {\n\t\t\twindow._fetchWaiting = {};\n\t\t}\n        let promise = new Promise(function(resolve) {\n            window._fetchWaiting[key] = resolve;\n        });\n\t\tpycmd(`fetch ${key} ${resource}`);\n        return promise;\n\t}\n\n\tfunction showNotification(text) {\n\t\tif (document.getElementById('notification')) {\n\t\t\tdocument.getElementById('notification').remove();\n\t\t}\n\n\t\tlet notification = document.createElement('div');\n\t\tnotification.innerText = text;\n\t\tnotification.classList.add('notification');\n\t\tnotification.onclick = 'event.target.remove()';\n\t\tnotification.id = 'notification';\n\t\tdocument.body.appendChild(notification);\n\t\tsetTimeout(function() {\n\t\t\tif (document.getElementById('notification')) {\n\t\t\t\tdocument.getElementById('notification').remove();\n\t\t\t}\n\t\t}, 2000);\n\t}\n\n\tasync function renderGraph() {\n\t\tawait tick();\n\t\tif (graph) {\n\t\t\tgraph.renderGraph();\n\t\t}\n\t}\n</script>\n\n<div class=\"outer\" style=\"background: {settings.backgroundColor}\">\n\t<div id=\"controls\">\n\t\t<div>\n\t\t\t<div style=\"margin-right: 10px\">\n\t\t\t\t<select bind:value={settings.mode}>\n\t\t\t\t\t<option value=\"cytoscape\">Cytoscape</option>\n\t\t\t\t\t<option value=\"viva\" disabled=\"{!webGLAvailable}\">Viva</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t<div style=\"margin-right: 10px\">\n\t\t\t\t<select bind:value={settings.graphMode}>\n\t\t\t\t\t<option value=\"default\">Default</option>\n\t\t\t\t\t<option value=\"tags\">Tags Only</option>\n\t\t\t\t\t<option value=\"scoring\">Scoring</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclass=\"button button-icon\"\n\t\t\t\ttitle=\"Rerender Graph\"\n\t\t\t\tstyle=\"margin-right: 10px\"\n\t\t\t\ton:click={renderGraph}\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\tclass=\"ionicon\"\n\t\t\t\t\tviewBox=\"0 0 512 512\"\n\t\t\t\t\t><path\n\t\t\t\t\t\td=\"M288 193s12.18-6-32-6a80 80 0 1080 80\"\n\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\t\tstroke-miterlimit=\"10\"\n\t\t\t\t\t\tstroke-width=\"28\"\n\t\t\t\t\t/><path\n\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\t\tstroke-width=\"28\"\n\t\t\t\t\t\td=\"M256 149l40 40-40 40\"\n\t\t\t\t\t/><path\n\t\t\t\t\t\td=\"M256 64C150 64 64 150 64 256s86 192 192 192 192-86 192-192S362 64 256 64z\"\n\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\tstroke-miterlimit=\"10\"\n\t\t\t\t\t\tstroke-width=\"32\"\n\t\t\t\t\t/></svg\n\t\t\t\t>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclass=\"button button-icon\"\n\t\t\t\ttitle=\"Toggle Show Retentions\"\n\t\t\t\tstyle=\"margin-right: 10px\"\n\t\t\t\ton:click={toggleShowRetentions}\n\t\t\t\tclass:active={settings.showRetentions}\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\tclass=\"ionicon\"\n\t\t\t\t\tviewBox=\"0 0 512 512\"\n\t\t\t\t\t><rect\n\t\t\t\t\t\tx=\"64\"\n\t\t\t\t\t\ty=\"320\"\n\t\t\t\t\t\twidth=\"48\"\n\t\t\t\t\t\theight=\"160\"\n\t\t\t\t\t\trx=\"8\"\n\t\t\t\t\t\try=\"8\"\n\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\t\tstroke-width=\"32\"\n\t\t\t\t\t/><rect\n\t\t\t\t\t\tx=\"288\"\n\t\t\t\t\t\ty=\"224\"\n\t\t\t\t\t\twidth=\"48\"\n\t\t\t\t\t\theight=\"256\"\n\t\t\t\t\t\trx=\"8\"\n\t\t\t\t\t\try=\"8\"\n\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\t\tstroke-width=\"32\"\n\t\t\t\t\t/><rect\n\t\t\t\t\t\tx=\"400\"\n\t\t\t\t\t\ty=\"112\"\n\t\t\t\t\t\twidth=\"48\"\n\t\t\t\t\t\theight=\"368\"\n\t\t\t\t\t\trx=\"8\"\n\t\t\t\t\t\try=\"8\"\n\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\t\tstroke-width=\"32\"\n\t\t\t\t\t/><rect\n\t\t\t\t\t\tx=\"176\"\n\t\t\t\t\t\ty=\"32\"\n\t\t\t\t\t\twidth=\"48\"\n\t\t\t\t\t\theight=\"448\"\n\t\t\t\t\t\trx=\"8\"\n\t\t\t\t\t\try=\"8\"\n\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\t\tstroke-width=\"32\"\n\t\t\t\t\t/></svg\n\t\t\t\t>\n\t\t\t</div>\n\t\t\t{#if settings.mode !== \"cytoscape\"}\n\t\t\t\t<div\n\t\t\t\t\tclass=\"button button-icon\"\n\t\t\t\t\ttitle=\"Toggle Show Unlinked Nodes\"\n\t\t\t\t\ton:click={toggleShowUnlinkedNodes}\n\t\t\t\t\tclass:active={settings.showUnlinkedNodes}\n\t\t\t\t>\n\t\t\t\t\t<svg\n\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\tclass=\"ionicon\"\n\t\t\t\t\t\tviewBox=\"0 0 512 512\"\n\t\t\t\t\t\t><circle\n\t\t\t\t\t\t\tcx=\"256\"\n\t\t\t\t\t\t\tcy=\"256\"\n\t\t\t\t\t\t\tr=\"192\"\n\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\t\t\tstroke-width=\"32\"\n\t\t\t\t\t\t/></svg\n\t\t\t\t\t>\n\t\t\t\t</div>\n\t\t\t{/if}\n\t\t\t<div class=\"setting-item\">\n\t\t\t\t<div\n\t\t\t\t\tclass=\"label\"\n\t\t\t\t\ttitle=\"Only include tags that are less common than this value. \n\tValid values range from 50 to 1000 (default 200).\"\n\t\t\t\t>\n\t\t\t\t\tTag Boundary\n\t\t\t\t</div>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tbind:value={tagBoundaryInp}\n\t\t\t\t\ton:blur={() => {\n\t\t\t\t\t\ttagBoundaryInp = Math.max(\n\t\t\t\t\t\t\t50,\n\t\t\t\t\t\t\tMath.min(1000, tagBoundaryInp)\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t\tmin=\"50\"\n\t\t\t\t\tmax=\"1000\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t{#if settings.mode === \"viva\"}\n\t\t\t\t<div class=\"setting-item\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass=\"label\"\n\t\t\t\t\t\ttitle=\"How many steps the layouting algorithm should perform until the graph freezes. \n\tValid inputs range from 50 to 1000 (default 300).\"\n\t\t\t\t\t>\n\t\t\t\t\t\tLayouting Iterations\n\t\t\t\t\t</div>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tbind:value={iterInp}\n\t\t\t\t\t\ton:blur={() => {\n\t\t\t\t\t\t\titerInp = Math.max(50, Math.min(1000, iterInp));\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tmin=\"50\"\n\t\t\t\t\t\tmax=\"1000\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t{/if}\n\t\t\t<div class=\"setting-item\">\n\t\t\t\t<div class=\"label\" title=\"Default = #999999\">Default Node</div>\n\t\t\t\t<input type=\"color\" bind:value={settings.defaultNodeColor} />\n\t\t\t</div>\n\t\t\t<div class=\"setting-item\">\n\t\t\t\t<div class=\"label\" title=\"Default = #555555\">Edge</div>\n\t\t\t\t<input type=\"color\" bind:value={settings.edgeColor} />\n\t\t\t</div>\n\t\t\t<div class=\"setting-item\">\n\t\t\t\t<div class=\"label\" title=\"Default = #333333\">Background</div>\n\t\t\t\t<input type=\"color\" bind:value={settings.backgroundColor} />\n\t\t\t</div>\n\t\t</div>\n\t\t<div>\n\t\t\t<input type=\"text\" class=\"browser-search\" placeholder=\"Browser search\" bind:value={search} on:keypress={onSearchKeypress}/>\n\t\t\t<div\n\t\t\t\tclass=\"button button-icon\"\n\t\t\t\tstyle=\"margin-left: 10px\"\n\t\t\t\ton:click={triggerSearch}\n\t\t\t>\n\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"ionicon\" viewBox=\"0 0 512 512\"><path d=\"M221.09 64a157.09 157.09 0 10157.09 157.09A157.1 157.1 0 00221.09 64z\" fill=\"none\" stroke=\"currentColor\" stroke-miterlimit=\"10\" stroke-width=\"32\"/><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"32\" d=\"M338.29 338.29L448 448\"/></svg>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n\t<div id=\"graph-wrapper\">\n\t\t{#if settings.mode === \"viva\"}\n\t\t\t<Vivagraph\n\t\t\t\tbind:this={graph}\n\t\t\t\tbind:infoNid\n\t\t\t\t{retentions}\n\t\t\t\t{notes}\n\t\t\t\t{settings}\n\t\t\t\t{searchResults}\n\t\t\t/>\n\t\t{:else}\n\t\t\t<Cytoscape\n\t\t\t\tbind:this={graph}\n\t\t\t\tbind:infoNid\n\t\t\t\t{retentions}\n\t\t\t\t{notes}\n\t\t\t\t{settings}\n\t\t\t\t{searchResults}\n\t\t\t/>\n\t\t{/if}\n\t\t<div id=\"info\">\n\t\t\t{#if infoNid && noteFields && noteFields.length}\n\t\t\t\t<div style=\"flex: 1 1 auto; overflow-y: auto;\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{#each noteTags as t}\n\t\t\t\t\t\t\t<div class=\"tag\">{t}</div>\n\t\t\t\t\t\t{/each}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"info-fields\">\n\t\t\t\t\t\t{#each noteFields as f}\n\t\t\t\t\t\t\t<div class=\"field\">{@html f}</div>\n\t\t\t\t\t\t{/each}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"info-actions\">\n\t\t\t\t\t<button on:click={window.pycmd('open-in-browser ' + infoNid)}>Open in Browser</button>\n\t\t\t\t</div>\n\t\t\t{/if}\n\t\t</div>\n\t</div>\n</div>\n\n<style>\n\t.outer {\n\t\tcolor: lightgrey;\n\t\tfont-family: \"Open Sans\";\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\toverflow: hidden;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t}\n\n\t#graph-wrapper {\n\t\tflex: 1 1 auto;\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\theight: 100%;\n\t\toverflow: hidden;\n\t}\n\n\t#controls {\n\t\tpadding: 10px;\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\talign-items: center;\n\t\tjustify-content: space-between;\n\t\tbackground: #232323;\n\t}\n\t#controls > div {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\talign-items: center;\n\t}\n\n\t#info {\n\t\twidth: 400px;\n\t\tflex: 0 0 400px;\n\t\toverflow: hidden;\n\t\tpadding: 10px;\n\t\tmargin-left: 10px;\n\t\tbackground: #232323;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-content: space-between;\n\t}\n\t#info-actions {\n\t\tpadding: 10px;\n\t\tbackground: #191919;\n\t}\n\t.tag {\n\t\tdisplay: inline-flex;\n\t\tmargin: 0 5px 5px 0;\n\t\tborder: 1px solid #444;\n\t\tpadding: 2px 7px;\n\t\talign-items: center;\n\t\tbackground: #3b3b3b;\n\t\tjustify-content: center;\n\t\tborder-radius: 4px;\n\t\tfont-size: 13px;\n\t}\n\n\t#info-fields {\n\t\tmargin-top: 20px;\n\t}\n\t:global(#info-fields img) {\n\t\tmax-width: 100%;\n\t}\n\t.field {\n\t\tpadding-bottom: 10px;\n\t\tborder-bottom: 1px solid rgb(66, 66, 66);\n\t\tmargin-bottom: 10px;\n\t\tword-wrap: break-word;\n\t}\n\n\tbutton {\n\t\tpadding: 3px;\n\t\tborder: 1px solid #3a3a3a;\n\t\tborder-radius: 2px;\n\t\tbackground: #2b2b2b;\n\t\tcolor: #9a9a9a;\n\t\tcursor: pointer;\n\t}\n\tbutton:hover {\n\t\tcolor: rgb(221, 221, 221);\n\t\tborder: 1px solid #464646;\n\t}\n\t.button-icon {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tpadding: 3px;\n\t\tborder: 1px solid #3a3a3a;\n\t\tbackground: #2b2b2b;\n\t\twidth: 20px;\n\t\theight: 20px;\n\t\tcursor: pointer;\n\t}\n\t.button-icon.active {\n\t\tcolor: #0094cd;\n\t}\n\t.button-icon svg {\n\t\theight: 100%;\n\t\twidth: 100%;\n\t}\n\t.label {\n\t\tuser-select: none;\n\t\tfont-size: 10px;\n\t\tmargin-bottom: 4px;\n\t}\n\t:global(select) {\n\t\tbackground: #2b2b2b;\n\t\theight: 28px;\n\t\tcolor: lightgrey;\n\t\tborder: 1px solid #3a3a3a;\n\t\tbox-sizing: border-box;\n\t}\n\tselect:focus {\n\t\toutline: none;\n\t}\n\tinput {\n\t\tbackground: #2b2b2b;\n\t\tborder: 1px solid #3a3a3a;\n\t\tcolor: lightgrey;\n\t}\n\tinput:focus {\n\t\toutline: none !important;\n\t\tborder: 1px solid #0094cd;\n\t\tbox-shadow: 0 0 10px #313131;\n\t}\n\tinput.browser-search {\n\t\tpadding: 3px 5px;\n\t\tfont-size: 18px;\n\t\twidth: 360px;\n\t}\n\t.setting-item {\n\t\tmargin-left: 10px;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t}\n\t:global(*::-webkit-scrollbar) {\n\t\twidth: 10px !important;\n\t\tbackground: #313d45 !important;\n\t\tborder-radius: 4px !important;\n\t}\n \t:global(*::-webkit-scrollbar-thumb) {\n\t\tbackground: #515d71 !important;\n\t\tborder-radius: 4px !important;\n\t} \n\t@keyframes -global-pulsate {\n\t\t0% {\n\t\ttransform: scale(.1);\n\t\topacity: 0.0;\n\t\t}\n\t\t50% {\n\t\topacity: 1;\n\t\t}\n\t\t100% {\n\t\ttransform: scale(1.2);\n\t\topacity: 0;\n\t\t}\n\t}\n\t:global(.loader) {\n\t\tborder: 5px solid #2496dc;\n\t\tborder-radius: 30px;\n\t\theight: 30px;\n\t\topacity: 0;\n\t\twidth: 30px; \n\t\tdisplay: inline-block;\n\n\t\tanimation: pulsate 1.5s ease-out;\n\t\tanimation-iteration-count: infinite;\n\t}\n\t:global(.notification) {\n\t\tposition: absolute;\n\t\tbottom: 30px;\n\t\tright: 30px;\n\t\tpadding: 15px;\n\t\tfont-size: 15px;\n\t\tbackground: #2b2b2b;\n\t\tcolor: lightgrey;\n\t\tcursor: pointer;\n\t\tz-index: 999999;\n\t}\n\n\t\n</style>\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.getElementById('svelte-wrapper'),\n\tprops: {\n\t}\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","to_number","set_data","wholeText","set_input_value","input","set_style","key","important","style","setProperty","select_option","select","option","__value","selected","selectedIndex","select_value","selected_option","querySelector","toggle_class","toggle","classList","current_component","set_current_component","component","get_current_component","Error","onMount","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","tick","add_render_callback","add_flush_callback","flushing","seen_callbacks","Set","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","transition_in","block","local","delete","transition_out","o","c","bind","index","props","undefined","bound","create_component","mount_component","customElement","on_destroy","m","new_on_destroy","map","filter","destroy_component","init","instance","create_fragment","not_equal","append_styles","parent_component","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","fill","make_dirty","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","type","indexOf","splice","$set","$$props","obj","$$set","keys","getGraphData","notes","retentions","settings","searchResults","console","log","assert","String","prototype","hashCode","hash","charCodeAt","byTag","tagCounts","edges","allNids","refs","nidReferenceRxp","RegExp","nid","tags","flds","fld","match","exec","reffedNid","Number","includes","t","_","lbl","graphMode","showRetentions","id","label","group","idC","nodesWithEdges","tag","els","entries","tagBoundary","excludeTags","tnode","n1","source","explicitLinkingsCounter","reffedNids","edgesCreated","sum","tag1","els1","nid1","find","scores","start","performance","now","tcl","dcl","i0","nid0","tags0","flds0","dids0","i1","tags1","flds1","dids1","score","Math","abs","did0","did1","t0","split","trunc","boundary","scoringIncludeTopXPercent","alert","sort","s1","s2","topX","slice","minScore","res","maxEdgeCount","s","warn","showUnlinkedNodes","n","mode","show","hideWebglTooltip","window","tooltip","display","infoNid","rendering","loader","onmousemove","e","lastMouseMove","pageX","pageY","defNodeColor","defaultNodeColor","replace","edgeColor","Viva","setTimeout","pBuildNodes","graph","getElementById","remove","graphics","Graph","View","webglGraphics","circleNode","program","gl","buffer","locations","webglUtils","canvasWidth","canvasHeight","transform","isCanvasDirty","nodesFS","join","nodesVS","Float32Array","nodesCount","load","glContext","webgl","createProgram","useProgram","getLocations","enableVertexAttribArray","vertexPos","customAttributes","createBuffer","position","nodeUI","pos","idx","x","y","color","size","render","bindBuffer","ARRAY_BUFFER","bufferData","DYNAMIC_DRAW","uniformMatrix4fv","uniform2f","screenSize","vertexAttribPointer","FLOAT","BYTES_PER_ELEMENT","drawArrays","POINTS","updateTransform","newTransform","updateSize","newCanvasWidth","newCanvasHeight","createNode","extendArray","removeNode","copyArrayPart","replaceProperties","replacedNode","newNode","buildCircleNodeShader","setNodeProgram","link","webglLine","addNode","addLink","layout","Layout","forceDirected","springLength","springCoeff","dragCoeff","gravity","webglInputEvents","mouseEnter","body","left","top","innerHTML","renderWebglTooltip","substring","mouseLeave","renderer","container","checkMovement","_lastMove","lastMove","graphRect","getGraphRect","graphSize","min","x2","x1","y2","y1","clientWidth","clientHeight","zoomOut","desiredScale","currentScale","onResize","cy","center","hideTooltip","settingsCopy","JSON","parse","stringify","cytoscape","elements","selector","height","startsWith","width","quality","randomize","animate","animationDuration","animationEasing","fit","padding","nodeDimensionsIncludeLabels","uniformNodeDimensions","packComponents","step","samplingType","sampleSize","nodeSeparation","piTol","nodeRepulsion","idealEdgeLength","edge","edgeElasticity","nestingFactor","numIter","tile","tilingPaddingVertical","tilingPaddingHorizontal","gravityRangeCompound","gravityCompound","gravityRange","initialEnergyOnIncremental","fixedNodeConstraint","alignmentConstraint","relativePlacementConstraint","textureOnViewport","stop","unbind","isNode","tooltipId","originalEvent","renderTooltip","pycmd","backgroundColor","r","search","tagBoundaryInp","iterInp","webGLAvailable","canvas","Boolean","WebGLRenderingContext","getContext","webglSupport","prevMode","prevGraphMode","triggerSearch","trim","resource","Date","reduce","_fetchWaiting","promise","fetch","nids","notification","innerText","onclick","showNotification","renderGraph","renderWhenReady","note","noteTags","noteFields","f","keyCode","toString","toLowerCase","max"],"mappings":"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"}